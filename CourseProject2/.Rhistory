json2[4,]
repo <- json2[4,]
names(repo)
repo$created_at
## Simple Lattice Plot
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone ~ Wind, data = airquality)  ## Nothing happens!
print(p)  ## Plot appears
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x)
xyplot(y ~ x)
xyplot(y ~ x | f, layout = c(2, 1))  ## Plot with 2 panels
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call default panel function
panel.lmline(x, y, col = 2)  ## Overlay a simple linear regression line
})
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(datasets)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data= mpg)
qplot(hwy, data = mpg, fill=drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = drv~.)
qplot(displ, hwy, data = mpg, facets = drv~., binwidth = 2)
?qplot
qplot(displ, hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, facets = drv~., binwidth = 8)
qplot(displ, hwy, data = mpg, facets = drv~., binwidth = 0.1)
myapp = oauth_app("Sturrion Test",
key="JMHycw5p5RoRTJjwtCQIwx5Yh",
secret="sU1NShIkOxUN3CxVmSBdixjFeNF42oO089iYS5UW5rgr6rRcUB")
library(httr)
myapp = oauth_app("Sturrion Test",
key="JMHycw5p5RoRTJjwtCQIwx5Yh",
secret="sU1NShIkOxUN3CxVmSBdixjFeNF42oO089iYS5UW5rgr6rRcUB")
sig = sign_oauth1.0(myapp,
token = "1852246698-y5XDy6uX6e8NJqkVe9yPwn9OwHAY3HJNyvKhKCR",
token_secret = "ARfNyH24O0xqRhnCu4BAnQ6JFABbyUC8J5f7YXorOi93T")
homeTL = GET("https://api.twitter.com/1.1/search/tweets.json?q=%23freebandnames&since_id=24012619984051000&max_id=250126199840518145&result_type=mixed&count=4", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
library(jsonlite)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2[1,]
json2[1]
json2[2]
json1
homeTL = GET("https://api.twitter.com/1.1/search/tweets.json?q=adoptadog", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + geom_smooth()
set.seed(13435)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
View(X)
X <- X[sample(1:5),]
View(X)
X$var2[c(1,3)] = NA
View(X)
X
set.seed(13435)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
X
X <- X[sample(1:5),]
X
X$var2[c(1,3)] = NA
X
X[,1]
X[,"var1"]
X[1:2,"var2"]
X[(X$var1 <= 3 & X$var3 > 11),]
X[(X$var1 <= 3 | X$var3 > 15),]
X[which(X$var2 > 8),]
X[(X$var2 > 8),]
X[X$var2 > 8,]
sort(X$var1)
sort(X$var1,decreasing=TRUE)
sort(X$var2,na.last=TRUE)
X[order(X$var1),]
X[order(X$var1,X$var3),]
library(plyr)
arrange(X,var1)
arrange(X,desc(var1))
X$var4 <- rnorm(5)
X
Y <- cbind(X,rnorm(5))
Y
if(!file.exists("./data")){
dir.create("./data")
}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/restaurants.csv",method="curl")
restData <- read.csv("./data/restaurants.csv")
head(restData,n=3)
tail(restData,n=3)
summary(restData)
str(restData)
quantile(restData$councilDistrict,na.rm=TRUE)
quantile(restData$councilDistrict,probs=c(0.5,0.75,0.9))
table(restData$zipCode,useNA="ifany")
table(restData$councilDistrict,restData$zipCode)
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
all(restData$zipCode > 0)
colSums(is.na(restData))
all(colSums(is.na(restData))==0)
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212","21213"))
restData[restData$zipCode %in% c("21212","21213"),]
data(UCBAdmissions)
library(datasets)
data(UCBAdmissions)
DF = as.data.frame(
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq ~ Gender + Admit,data=DF)
xt
warpbreaks$replicate <- rep(1:9, len = 54)
xt = xtabs(breaks ~.,data=warpbreaks)
xt
ftable(xt)
head(warpbreaks)
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
library(data.table)
install.packages("data.table")
library(data.table)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/', cache=TRUE)
install.packages("fields")
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("lars")
install.packages("makeslides")
set.seed(1234)
par(mar = c(0, 0, 0, 0))
?par
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
summary(x)
summary(y)
plot(x, y, col = "blue", pch = 19, cex = 2)
?plot
plot(x, y, col = "blue", pch = 19, cex = 0.5)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
dist(dataFrame)
dist(dataFrame)
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
distxy
hClustering <- hclust(distxy)
plot(hClustering)
?par
par(mar = c(5, 4, 4, 2) + 0.1)
plot(hClustering)
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...) {
## modifiction of plclust for plotting hclust objects *in colour*!  Copyright
## Eva KF Chan 2009 Arguments: hclust: hclust object lab: a character vector
## of labels of the leaves of the tree lab.col: colour for the labels;
## NA=default device foreground colour hang: as in hclust & plclust Side
## effect: A display of hierarchical cluster with coloured leaf labels.
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x < 0)]
x <- x[which(x < 0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height) * hang), labels = lab[hclust$order],
col = lab.col[hclust$order], srt = 90, adj = c(1, 0.5), xpd = NA, ...)
}
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
View(dataMatrix)
heatmap(dataMatrix)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x, y)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x, y)
kmeansObj <- kmeans(dataFrame, centers = 3)
names(kmeansObj)
kmeansObj$cluster
kmeansObj <- kmeans(dataFrame, centers = 4)
kmeansObj$cluster
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
kmeansObj <- kmeans(dataFrame, centers = 5)
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
dataFrame <- data.frame(x, y)
kmeansObj <- kmeans(dataFrame, centers = 3)
names(kmeansObj)
kmeansObj$cluster
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
## K-means clustering - example
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
## kmeans()
#   Important parameters: x, centers, iter.max, nstart
dataFrame <- data.frame(x, y)
kmeansObj <- kmeans(dataFrame, centers = 3)
names(kmeansObj)
kmeansObj$cluster
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
kmeansObj2 <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1, 2), mar = c(2, 4, 0.1, 0.1))
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj$cluster)], yaxt = "n")
par("dim")
?par
par("din")
par("din")/3
library(ggplot2)
?ggsave
setwd("/Users/silvia/Estudiar/Data Science/Courses/Coursera - 04 Exploratory Data Analysis/exploratory-data-analysis-course/CourseProject2")
source("plot3.R")
source("plot3.R")
source("plot3.R")
################################################################################
# Of the four types of sources indicated by the type (point, nonpoint, onroad,
# nonroad) variable, which of these four sources have seen decreases in
# emissions from 1999–2008 for Baltimore City?
# Which have seen increases in emissions from 1999–2008?
# Use the ggplot2 plotting system to make a plot answer this question.
################################################################################
# Load the data
print("This will likely take a few seconds. Be patient!")
NEI <- readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
# Subsetting data. Get Baltimore City, Maryland (fips == "24510")
baltimore.data <- NEI[NEI$fips == "24510",]
# Create the data for the plot
library(plyr)
total.emissions <- ddply(baltimore.data,
.(as.factor(year), as.factor(type)), # convert number to character
summarize,
total=sum(Emissions)) # sum to million tons
# Give column names
colnames <- c("year","type", "tons")
colnames(total.emissions) <- colnames
# Create the plot
library(ggplot2)
png(filename = "plot3.png", width = 807, height = 342) ## Create my plots in a PNG file
qplot(year,
data = total.emissions,
facets = . ~ type,
geom="bar",
weight=tons,
main=expression("Total emissions from PM"[2.5]*
" in the Baltimore City, Maryland"),
xlab="Years",
ylab = expression("Amount of PM"[2.5]*" emitted, in tons"),
fill = type)
dev.off()  ## Don't forget to close the PNG device!
6/4
print("This will likely take a few seconds. Be patient!")
NEI <- readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
SCC$nuevoSCC <- as.character(SCC$SCC)
View(SCC)
summary(SCC)
grepl("Coal", SCC$SCC.Level.Four)
str(SCC)
SCC[grepl("Coal", SCC$SCC.Level.Four),]
nrow(SCC[grepl("Coal", SCC$SCC.Level.Four),])
View(SCC)
coalData1 <- SCC[grepl("Coal", SCC$Short.Name),]
coalData2 <- SCC[grepl("Coal", SCC$EI.Sector),]
coalData3 <- SCC[grepl("Coal", SCC$SCC.Level.Three),]
coalData4 <- SCC[grepl("Coal", SCC$SCC.Level.Four),]
View(coalData1)
summary(coalData1)
View(coalData2)
table(SCC$SCC.Level.One, SCC$SCC.Level.Two, SCC$SCC.Level.Three, SCC$SCC.Level.Four)
table(SCC$SCC.Level.One, SCC$SCC.Level.Two)
table(SCC$SCC.Level.One)
table(SCC$SCC.Level.Two)
combustionLevelOne <- SCC[grepl("Combustion", SCC$SCC.Level.One),]
table(combustionLevelOne$SCC.Level.Two)
View(combustionLevelOne)
table(combustionLevelOne$SCC.Level.One)
coalData1 <- combustionLevelOne[grepl("Coal", combustionLevelOne$Short.Name),]
coalData2 <- combustionLevelOne[grepl("Coal", combustionLevelOne$EI.Sector),]
coalData3 <- combustionLevelOne[grepl("Coal", combustionLevelOne$SCC.Level.Three),]
coalData4 <- combustionLevelOne[grepl("Coal", combustionLevelOne$SCC.Level.Four),]
View(coalData2)
View(coalData4)
combustionLevelOne <- SCC[grepl("Combustion", SCC$SCC.Level.One),]
View(combustionLevelOne)
View(coalData1)
coal.combustion.data <- SCC[grepl("Comb ", SCC$Short.Name) | grepl("Coal", SCC$Short.Name) ,]
View(coal.combustion.data)
coal.combustion.data <- SCC[grepl("Comb ", SCC$Short.Name) && grepl("Coal", SCC$Short.Name) ,]
View(coal.combustion.data)
coal.combustion.data <- SCC[grepl("Comb ", SCC$Short.Name) & grepl("Coal", SCC$Short.Name) ,]
View(coal.combustion.data)
View(coal.combustion.data)
mergedData = merge(NEI,coal.combustion.data,by.x="SCC",by.y="SCC",all=TRUE)
NEI <- readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
coal.combustion.data <- SCC[grepl("Comb ", SCC$Short.Name)
& grepl("Coal", SCC$Short.Name) ,]
mergedData = merge(NEI,coal.combustion.data,by.x="SCC",by.y="SCC",all=TRUE)
View(mergedData)
?merge
mergedData = merge(NEI,coal.combustion.data,by.x="SCC",by.y="SCC")
View(mergedData)
################################################################################
# Across the United States, how have emissions from coal combustion-related
# sources changed from 1999–2008?
################################################################################
# Load the data
print("This will likely take a few seconds. Be patient!")
NEI <- readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
# Subsetting data. Getting coal combustion-related data
coal.combustion.sources <- SCC[grepl("Comb ", SCC$Short.Name)
& grepl("Coal", SCC$Short.Name) ,]
coal.combustion.data = merge(NEI,coal.combustion.source,by.x="SCC",by.y="SCC")
library(plyr)
# Create the data for the plot
coal.emissions <- ddply(NEI,
.(as.character(year)), # convert number to character
summarize,
total=sum(Emissions)/1000000) # sum to million tons
# Give column names
colnames <- c("year","million.tons")
colnames(coal.emissions) <- colnames
# Create the plot
par(ps=12, mar=c(5.1,5.1,4.1,2.1))
barplot(coal.emissions$million.tons,
col="cadetblue4",
main=expression("Total emissions from PM"[2.5]*" in the United States"),
xlab="Years",
ylab=expression("Amount of PM"[2.5]*" emitted, in million tons"),
names.arg=coal.emissions$year)
# Making png file
dev.copy(png, file = "plot1.png")
dev.off()  ## Don't forget to close the PNG device!
################################################################################
# Have total emissions from PM2.5 decreased in the United States from 1999 to
# 2008?
# Using the base plotting system, make a plot showing the total PM2.5 emission
# from all sources for each of the years 1999, 2002, 2005, and 2008.
################################################################################
# Load the data
print("This will likely take a few seconds. Be patient!")
NEI <- readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
library(plyr)
# Create the data for the plot
total.emissions <- ddply(NEI,
.(as.character(year)), # convert number to character
summarize,
total=sum(Emissions)/1000000) # sum to million tons
# Give column names
colnames <- c("year","million.tons")
colnames(total.emissions) <- colnames
# Create the plot
par(ps=12, mar=c(5.1,5.1,4.1,2.1))
barplot(total.emissions$million.tons,
col="cadetblue4",
main=expression("Total emissions from PM"[2.5]*" in the United States"),
xlab="Years",
ylab=expression("Amount of PM"[2.5]*" emitted, in million tons"),
names.arg=total.emissions$year)
# Making png file
dev.copy(png, file = "plot1.png")
dev.off()  ## Don't forget to close the PNG device!
colors()
source("plot4.R")
################################################################################
# Across the United States, how have emissions from coal combustion-related
# sources changed from 1999–2008?
################################################################################
# Load the data
print("This will likely take a few seconds. Be patient!")
NEI <- readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
# Subsetting data. Getting coal combustion-related data
coal.combustion.sources <- SCC[grepl("Comb ", SCC$Short.Name)
& grepl("Coal", SCC$Short.Name) ,]
source("plot4.R")
source("plot4.R")
barplot(coal.emissions$million.tons,
col="slategrey",
main=expression("Total emissions from PM"[2.5]*" from coal combustion-related in the United States"),
xlab="Years",
ylab=expression("Amount of PM"[2.5]*" emitted, in million tons"),
names.arg=coal.emissions$year)
source("plot4.R")
table(SCC$EI.Sector)
# Subsetting data. Getting coal combustion-related data
coal.combustion.sources <- SCC[grepl("Comb ", SCC$Short.Name)
& grepl("Coal", SCC$Short.Name) ,]
coal.combustion.data = merge(NEI,coal.combustion.sources,by.x="SCC",by.y="SCC")
library(plyr)
# Create the data for the plot
coal.emissions <- ddply(NEI,
.(as.character(year)), # convert number to character
summarize,
total=sum(Emissions)/1000000) # sum to million tons
# Give column names
colnames <- c("year","million.tons")
colnames(coal.emissions) <- colnames
# Create the plot
png(filename = "plot4.png", width = 600, height = 480) ## Create my plots in a PNG file
par(ps=12, mar=c(5.1,5.1,4.1,2.1))
barplot(coal.emissions$million.tons,
col="slategrey",
main=expression("Total emissions from PM"[2.5]*" from coal combustion-related in the United States"),
xlab="Years",
ylab=expression("Amount of PM"[2.5]*" emitted, in million tons"),
names.arg=coal.emissions$year)
# Making png file
dev.copy(png, file = "plot4.png")
dev.off()  ## Don't forget to close the PNG device!
# Subsetting data. Getting coal combustion-related data
coal.combustion.sources <- SCC[grepl("Comb ", SCC$Short.Name)
& grepl("Coal", SCC$Short.Name) ,]
coal.combustion.data = merge(NEI,coal.combustion.sources,by.x="SCC",by.y="SCC")
library(plyr)
# Create the data for the plot
coal.emissions <- ddply(NEI,
.(as.character(year)), # convert number to character
summarize,
total=sum(Emissions)/1000000) # sum to million tons
# Give column names
colnames <- c("year","million.tons")
colnames(coal.emissions) <- colnames
# Create the plot
png(filename = "plot4.png", width = 600, height = 480) ## Create my plots in a PNG file
par(ps=12, mar=c(5.1,5.1,4.1,2.1))
barplot(coal.emissions$million.tons,
col="slategrey",
main=expression("Total emissions from PM"[2.5]*" from coal combustion-related in the United States"),
xlab="Years",
ylab=expression("Amount of PM"[2.5]*" emitted, in million tons"),
names.arg=coal.emissions$year)
# Making png file
#dev.copy(png, file = "plot4.png")
dev.off()  ## Don't forget to close the PNG device!
