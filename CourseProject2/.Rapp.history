abs(0.3-0.38)
prp(CARTmodel2, digits = 6)
abs(0.296638-0.377948)
abs(0.296638-0.314538)
CARTmodel2
abs(0.296638-0.3158996)
str(gerber)
CARTcontrol = rpart(voting ~ control, data=gerber, cp=0.0)#
CARTsex = rpart(voting ~ control + sex, data=gerber, cp=0.0)#
prp(CARTcontrol, digits=6)
prp(CARTsex, digits=6)
CARTsec
CARTsex
abs(0.2904558 - 0.3341757)
abs(0.3027947 - 0.3458183)
abs(0.0437199 - 0.0430236)
logModel <- glm(voting ~ sex + control, data=gerber, family=binomial)
summary(logModel)
Possibilities = data.frame(sex=c(0,0,1,1),control=c(0,1,0,1))#
predict(LogModelSex, newdata=Possibilities, type="response")
Possibilities = data.frame(sex=c(0,0,1,1),control=c(0,1,0,1))#
predict(logModel, newdata=Possibilities, type="response")
abs(0.2908065 - 0.290456)
LogModel2 = glm(voting ~ sex + control + sex:control, data=gerber, family="binomial")
summary(LogModel2)
predict(LogModel2, newdata=Possibilities, type="response")
abs(0.290456 - 0.290456)
letters <- read.csv("letters_ABPR.csv")
letters$isB = as.factor(letters$letter == "B")
library(caTools)#
set.seed(1000)#
split = sample.split(letters$isB, SplitRatio = 0.5)#
Train = subset(letters, split==TRUE)#
Test = subset(letters, split==FALSE)
table(letters$isB)
2350/nrow(letters)
table(Test$isB)
1175/nrow(Test)
CARTb = rpart(isB ~ . - letter, data=train, method="class")
CARTb = rpart(isB ~ . - letter, data=Train, method="class")
PredictCART = predict(CARTb, newdata = Test, type = "class")#
table(Test$isB, PredictCART)
(1118+340)/nrow(Test)
library(randomForest)
lettersForest = randomForest(isB ~ . - letter, data = Train)
PredictForest = predict(lettersForest, newdata = Test)#
table(Test$isB, PredictForest)
(1164+373)/nrow(Test)
letters$letter = as.factor( letters$letter )
set.seed(2000)#
split = sample.split(letters$letter, SplitRatio = 0.5)#
Train = subset(letters, split==TRUE)#
Test = subset(letters, split==FALSE)
table(Train$letters)
table(Train$letter)
table(Test$letter)
401/nrow(Test)
CARTletter = rpart(letter ~ . - isB, data=Train, method="class")
PredictCART = predict(CARTletter, newdata = Test, type = "class")#
table(Test$letter, PredictCART)
(348+318+363+340)/nrow(Test)
set.seed(1000)
lettersForest = randomForest(letter ~ . - isB, data = Train)
PredictForest = predict(lettersForest, newdata = Test)
table(Test$letter, PredictForest)
(390+380+393+364)/nrow(Test)
data(state)#
statedata = data.frame(state.x77)
str(statedata)
model1 = lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data = statedata)
summary(model1)
predictTest <- predict(model1)#
SSE = sum((predictTest - statedata$Life.Exp)^2)
SSE
model2 = lm(Life.Exp ~ Population + Murder + HS.Grad + Frost, data = statedata)#
summary(model2)
predictTest <- predict(model2)#
SSE = sum((predictTest - statedata$Life.Exp)^2)
SSE
CARTmodel = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data= statedata)#
prp(CARTmodel)
library(rpart)#
library(rpart.plot)#
#
CARTmodel = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data= statedata)#
prp(CARTmodel)
predictTest <- predict(CARTmodel)#
SSE = sum((predictTest - statedata$Life.Exp)^2)
SSE
CARTmodel = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data= statedata, minbucket=5)#
prp(CARTmodel)
predictTest <- predict(CARTmodel)#
SSE = sum((predictTest - statedata$Life.Exp)^2)
SSE
CARTmodel = rpart(Life.Exp ~ Area, data= statedata, minbucket=1)#
predictTest <- predict(CARTmodel)#
SSE = sum((predictTest - statedata$Life.Exp)^2)
SSE
prp(CARTmodel)
airquality
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
y <- x[[1]]
class(y)
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x >= 11] <- 4
x
install.packages("KernSmooth")
library(KernSmooth)
(13/52)*(12/51)*(11/50)*(10/49)*(9/48)
(12/51)*(11/50)*(10/49)*(9/48)
1 - ((5/6) * (5/6) * (5/6))
(6/6) * (5/6) * (4/6)
(364/365) * (363/365) * (362/365) * (361/365)
1 - 0.9728644
(1/26)^6
6!
fact(6)
factorial(6)
(factorial(6))/(26^6)
(52-4)/52
1-0.65
0.65*0.88
0.35*0.07
0.65*0.12 + 0.35*0.07
0.0245 / 0.1025
0.65 + 0.35*0.93
cube <- function(x,n) {}
cube <- function(x, n) {#
	x^3#
}
cube(3)
x <- 1:10#
if(x > 5) {#
	x <- 0#
}
f <- function(x) {#
        g <- function(y) {#
                y + z#
        }#
        z <- 4#
        x + g(x)#
}
z <- 10
f(3)
x <- 5#
y <- if(x < 3) {#
        NA#
} else {#
        10#
}
y
h <- function(x, y = NULL, d = 3L) {#
        z <- cbind(x, d)#
        if(!is.null(y))#
                z <- z + y#
        else#
                z <- z + f#
        g <- x + y / z#
        if(d == 3L)#
                return(g)#
        g <- g + 10#
        g#
}
h(1,1,1)
39.95 / 40
42.95 / 80
47.95 / 120
79.95 / 240
185 / 500
39.95 / 4
53.92 / 8
21.95 / 3
39.95 / 6
2*3*5
3^3
6*25
4^0.5
15*30
38/40
2^36
1 - 0.32
900 * 0.68^3
1500*1.048^8
1500*(1.048^8)
1500*(0.048^8)
2183 - 1500
20000 / (1.035^21)
1.015^4
1.015^4 - 1
100-3.7
96.3/100
1000*0.12
1/6
40.18766/100
0.4018766^2
?gl
library(datasets)
data(iris)
?iris
summary(iris)
tapply(iris$Sepal.Length, Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
summary(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
?mtcars
library(datasets)
data(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
ls()
n
exit
end
n
?val
?inverse
??inverse
system.time(ls)
system.time(ls())
system.time(rnorm(100))
set.seed(1)
rpois(5, 2)
con <- url("http://www.jhsph.edu", "r")
x <- readlines(con)
x <- readLines(con)
head(x)
head(x,20)
lapply
sin(90)
?sin
?sin(90 degrees)
4*sin(0.7)+7
4*sin(0.48*x - 0.7)+7
4*sin(0.48*t - 0.7)+7
t <- 0
4*sin(0.48*t - 0.7)+7
t<-12
4*sin(0.48*t - 0.7)+7
getwd()
x <- 90.68
-0.0043*x^2 + x + 50
(-0.0043)*(x^2) + x + 50
x <- 180
(-0.0043)*(x^2) + x + 50
x <- rnorm(100)
hist(x)
install.packages("RMySQL")
?rnorm
rnorm(200, mean = 3.5)
1/6
x <- 9
y <- -1.52*x + 99.16
y
x <- 0
y
y <- -1.52*x + 99.16
y
x <- 9
y <- -1.52*x + 99.16
y
?splom
library(lattice)
?splom
?print.trellis
?trellis.par.set
?par
?geom
?lpoints
?lines
?points
?lines
setwd("/Users/silvia/Estudiar/Data Science/Courses/Coursera - 04 Exploratory Data Analysis/exploratory-data-analysis-course/CourseProject2")
source("plot1.R")
source("plot2.R")
source("plot3.R")
dev.off()
dev.off()
source("plot2.R")
dev.off()
source("plot2.R")
source("plot3.R")
dev.off()
